{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"form {\\r\\n    border: solid navy 2px;\\r\\n    width: 50%;\\r\\n}\\r\\ninput{\\r\\n    display: block;\\r\\n}\\r\\n#task-list{\\r\\n    border: solid navy 2px;\\r\\n    width: 25%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsVUFBVTtBQUNkO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxzQkFBc0I7SUFDdEIsVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICAgIGJvcmRlcjogc29saWQgbmF2eSAycHg7XHJcbiAgICB3aWR0aDogNTAlO1xyXG59XHJcbmlucHV0e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuI3Rhc2stbGlzdHtcclxuICAgIGJvcmRlcjogc29saWQgbmF2eSAycHg7XHJcbiAgICB3aWR0aDogMjUlO1xyXG59Il19 */\"","module.exports = \"<h1>Restful Tasks Api</h1>\\n<button (click)='getTasks()'>Get All Tasks</button>\\n\\n<div *ngFor=\\\"let task of tasks\\\" id=\\\"task-list\\\">\\n  <p>{{task.title}}</p>\\n  <p id=\\\"{{task._id}}\\\">{{task.description}}</p>\\n  <button (click)='deleteTask(task._id)'>Delete</button>\\n  <button (click)=' toggleEditForm(task._id, task.title, task.description)'>\\n      Edit</button>\\n  <form *ngIf=\\\"editTask.id == task._id && editTask.toggle == true\\\" (submit)=\\\"updateTask(task._id)\\\">\\n    <p>Make edits...</p>\\n    <label for=\\\"updatedTask.title\\\">Title:</label>\\n    <input type=\\\"text\\\" name=\\\"updatedTask.title\\\" [(ngModel)]=\\\"updatedTask.title\\\">\\n    <label for=\\\"updatedTask.description\\\">Description:</label>\\n    <input type=\\\"text\\\" name=\\\"updatedTask.description\\\" [(ngModel)]=\\\"updatedTask.description\\\">\\n    <button>Submit</button>\\n  </form>\\n</div>\\n\\n\\n<form (submit)=\\\"createTask()\\\">\\n  <h4>Create: new task!</h4>\\n  <label for=\\\"newTask.title\\\">Title:</label>\\n  <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\">\\n  <label for=\\\"newTask.description\\\">Description:</label>\\n  <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\">\\n  <button>Submit</button>\\n</form>\\n\\n<!-- {{newTask | json}}\\n{{updatedTask | json}} -->\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n  newTask:any;\n  updatedTask:any;\n  editTask:any;\n  tasks:any;\n  constructor(private _httpService: HttpService){}\n  \n  getTasks = () => {\n    let tempObservable = this._httpService.getTasks()\n    tempObservable.subscribe(data => {\n      console.log(data);\n      this.tasks = data;\n    })\n  };\n\n  createTask = () => {\n    let tempObsevable = this._httpService.createTask(this.newTask);\n    tempObsevable.subscribe(data => console.log(data));\n    this.newTask = { title: \"\", description: \"\" },\n    this.getTasks();\n  }\n\n  deleteTask = (id) => {\n    let tempObservable = this._httpService.deleteTask(id);\n    tempObservable.subscribe(data => console.log(data));\n    this.getTasks();\n  }\n\n  updateTask = (id) => {\n    let tempObservable = this._httpService.updateTask(id,this.updatedTask);\n    tempObservable.subscribe(data => console.log(data));\n    this.updatedTask = { title: \"\", description: \"\" };\n    this.editTask.toggle = false;\n    this.getTasks();\n  }\n\n  toggleEditForm(id, title, description){\n    this.editTask.toggle = !this.editTask.toggle;\n    this.editTask.id = id;\n    this.updatedTask = { title: title, description: description};\n  }\n\n  ngOnInit(){\n    this.newTask = { title: \"\", description: \"\" };\n    this.updatedTask = { title: \"\", description: \"\" };\n    this.editTask = {toggle: false, id: null}\n  }\n\n  subButtonClick(id) {\n    let task = document.getElementById(id);\n    task.style.visibility = \"visible\"\n  }\n};\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http:HttpClient) { \n    // this.getTask('5c91514a4f85da2ea015eeaf');\n  }\n\n  getTasks() {\n    return this._http.get('/api/tasks');\n  }\n  getTask(id) {\n    let tempObservable = this._http.get(`/api/tasks/${id}`);\n    tempObservable.subscribe(data => console.log(\"Specific task:\", data));\n  }\n  createTask(data){\n    return this._http.post('/api/tasks', data);\n  }\n\n  deleteTask(id){\n    return this._http.delete(`/api/tasks/${id}`)\n  }\n\n  updateTask(id, data) {\n    return this._http.put(`/api/tasks/${id}`,data)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}